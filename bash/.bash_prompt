#
# ~/.bash_prompt
#

        RED="\[\033[1;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[1;32m\]"
       BLUE="\[\033[1;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[1;37m\]"
COLOR_NONE="\[\e[0m\]"

# Detect whether the current directory is a git repository.
function is_git_repository {
  git branch > /dev/null 2>&1
}

function set_git_branch {
  git_status="$(git status 2> /dev/null)"

  if [[ ${git_status} =~ "working tree clean" ]]; then
    state="${GREEN}"
  elif [[ ${git_status} =~ "Changes to be committed" ]]; then
    state="${BLUE}"
  else
    state="${LIGHT_RED}"
  fi

  branch_pattern="^(# )?On branch ([^${IFS}]*)"
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=${BASH_REMATCH[2]}
  fi

  BRANCH="${state}(${branch})${remote}${COLOR_NONE} "
}

function set_prompt_symbol () {
  if test $1 -eq 0 ; then
      PROMPT_SYMBOL="\$"
  else
      PROMPT_SYMBOL="${LIGHT_RED}\$${COLOR_NONE}"
  fi
}

function set_bash_prompt () {
  set_prompt_symbol $?

  history -a
  history -c
  history -r

  if is_git_repository ; then
    set_git_branch
  else
    BRANCH=''
  fi

  PS1="${WHITE}\t ${GREEN}\u@\h ${YELLOW}\w ${COLOR_NONE}${BRANCH}${PROMPT_SYMBOL} "
}

PROMPT_COMMAND=set_bash_prompt
